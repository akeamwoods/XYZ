{"version":3,"sources":["components/SideMenu/style.ts","components/SideMenu/index.tsx","store/actions.ts","store/reducer.ts","store/saga.ts","store/index.tsx","components/AutoSuggest/style.ts","components/AutoSuggest/index.tsx","hooks/useOutsideClick.ts","components/FilterButton/style.ts","components/FilterButton/index.tsx","components/ControlMenu/style.ts","components/ControlMenu/index.tsx","pages/GraphsPage/style.ts","components/Table/style.ts","components/Table/index.tsx","pages/TablePage/style.ts","style.ts","index.tsx","pages/TablePage/index.tsx","pages/GraphsPage/index.tsx"],"names":["Wrapper","styled","div","NavLinks","nav","Link","NavLink","SideMenu","exact","to","activeStyle","background","size","customerDataFetched","createAction","filterButtonPressed","filterInputUpdated","searchQueryModified","searchTermSelected","autoSuggestCleared","actions","dataLimitModified","sortSalary","firstValue","secondValue","ascending","rootSaga","fetchCustomerDataSaga","getFilteredResults","all","takeLatest","getType","call","fetch","then","response","json","results","put","console","log","payload","delay","sagaMiddleware","createSagaMiddleware","store","createStore","state","userData","activeSort","undefined","filterQuery","searchResults","dataLimit","action","produce","draft","type","filterType","sort","d1","d2","parse","date_of_birth","Date","getTime","reverse","a","b","industry","salary","first_name","toLowerCase","last_name","filter","result","includes","concat","replace","composeWithDevTools","applyMiddleware","run","useTypedSelector","useSelector","Input","input","SuggestionsContainer","ul","Suggestion","li","AutoSuggest","dispatch","useDispatch","searchFilter","ref","React","useRef","callback","handleClick","e","current","contains","target","useEffect","document","addEventListener","removeEventListener","useOutsideClick","placeholder","value","onChange","slice","map","s","index","onClick","Button","button","FilterButton","label","currentSort","descendingSort","ascendingSort","MaxResults","ControlMenu","totalResults","resultsShowing","min","parseInt","Table","list","headers","Object","keys","assign","height","width","headerHeight","rowHeight","rowCount","length","rowGetter","header","dataKey","Container","ReactDOM","render","StrictMode","basename","process","path","component","customerData","filteredList","useMemo","data","ResponsiveContainer","aspect","LineChart","XAxis","Tooltip","CartesianGrid","stroke","Line","yAxisId","getElementById"],"mappings":"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","file":"static/js/main.fcd879cf.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Wrapper = styled.div`\n  padding: 30px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  background: #04a9cd;\n  p {\n    color: #fff;\n    margin: 0;\n    font-weight: 400;\n  }\n  align-items: center;\n  box-shadow: 0px 22px 24px 0px rgba(46, 51, 51, 0.07);\n`;\n\nexport const NavLinks = styled.nav`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Link = styled(NavLink)`\n  padding: 5px 10px;\n  text-decoration: none;\n  color: #fff;\n  font-weight: 0;\n  transition: 0.3s;\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  border-radius: 4px;\n  svg {\n    margin-right: 10px;\n  }\n  :hover {\n    background: rgba(0, 0, 0, 0.1);\n  }\n`;\n","import React from \"react\";\nimport { Wrapper, NavLinks, Link } from \"./style\";\nimport { MdList, MdShowChart } from \"react-icons/md\";\n\nexport const SideMenu = () => {\n  return (\n    <Wrapper>\n      <NavLinks>\n        <Link exact to=\"/\" activeStyle={{ background: \"rgba(0,0,0,0.3)\" }}>\n          <MdList size=\"24\" />\n          Table View\n        </Link>\n        <Link\n          exact\n          to=\"/graphs\"\n          activeStyle={{ background: \"rgba(0,0,0,0.3)\" }}\n        >\n          <MdShowChart size=\"24\" />\n          Graph View\n        </Link>\n      </NavLinks>\n    </Wrapper>\n  );\n};\n","import { ActionType, createAction } from \"typesafe-actions\";\nimport { CustomerData, SortMethod } from \"./types\";\n\nconst customerDataFetched = createAction(\"customer data fetched\")<\n  CustomerData[]\n>();\nconst filterButtonPressed = createAction(\"sort button pressed\")<SortMethod>();\nconst filterInputUpdated = createAction(\"filter input updated\")<string>();\nconst searchQueryModified = createAction(\"search query modified\")<string>();\nconst searchTermSelected = createAction(\"search term selected\")<CustomerData>();\nconst autoSuggestCleared = createAction(\"auto suggest cleared\")();\nconst dataLimitModified = createAction(\"data limit modified\")<number>();\n\nexport const actions = {\n  customerDataFetched,\n  filterButtonPressed,\n  searchQueryModified,\n  filterInputUpdated,\n  searchTermSelected,\n  dataLimitModified,\n  autoSuggestCleared,\n};\n\nexport type Actions = ActionType<typeof actions>;\n","import { Actions, actions } from \"./actions\";\nimport { Reducer } from \"redux\";\nimport produce from \"immer\";\nimport { getType } from \"typesafe-actions\";\nimport { CustomerData, SortMethod } from \"./types\";\nimport { parse } from \"date-fns\";\n\nconst initialState = () => ({\n  userData: [] as CustomerData[],\n  activeSort: undefined as undefined | SortMethod,\n  filterQuery: \"\",\n  searchResults: [] as CustomerData[],\n  dataLimit: 500,\n});\n\nexport type State = Readonly<ReturnType<typeof initialState>>;\n\nexport const rootReducer: Reducer<State, Actions> = (\n  state = initialState(),\n  action: Actions\n) =>\n  produce(state, (draft) => {\n    switch (action.type) {\n      case getType(actions.customerDataFetched): {\n        draft.userData = action.payload;\n        break;\n      }\n      case getType(actions.filterButtonPressed): {\n        const filterType = action.payload;\n        switch (filterType) {\n          case \"dob_descending\":\n            draft.userData = [\n              ...draft.userData.sort(\n                (d1, d2) =>\n                  parse(d1.date_of_birth, \"dd/MM/yyyy\", new Date()).getTime() -\n                  parse(d2.date_of_birth, \"dd/MM/yyyy\", new Date()).getTime()\n              ),\n            ];\n            break;\n          case \"dob_ascending\":\n            draft.userData = draft.userData.reverse();\n            break;\n          case \"industry_descending\":\n            draft.userData = [\n              ...draft.userData.sort((a, b) => {\n                if (!a.industry) return 1;\n                else if (!b.industry) return -1;\n                else if (a.industry === \"n/a\") return 1;\n                else if (b.industry === \"n/a\") return -1;\n                else return a.industry < b.industry ? 1 : -1;\n              }),\n            ];\n            break;\n          case \"industry_ascending\":\n            draft.userData = [\n              ...draft.userData.sort((a, b) => {\n                if (!a.industry) return 1;\n                else if (!b.industry) return -1;\n                else if (a.industry === \"n/a\") return 1;\n                else if (b.industry === \"n/a\") return -1;\n                else return b.industry < a.industry ? 1 : -1;\n              }),\n            ];\n            break;\n\n          case \"salary_descending\":\n            draft.userData = [\n              ...draft.userData.sort((a, b) =>\n                sortSalary(a.salary, b.salary, false)\n              ),\n            ];\n\n            break;\n          case \"salary_ascending\":\n            draft.userData = [\n              ...draft.userData.sort((a, b) =>\n                sortSalary(a.salary, b.salary, true)\n              ),\n            ];\n            break;\n          default:\n        }\n        draft.activeSort = filterType;\n        break;\n      }\n      case getType(actions.filterInputUpdated): {\n        draft.filterQuery = action.payload;\n        break;\n      }\n\n      case getType(actions.searchTermSelected): {\n        draft.filterQuery = `${action.payload.first_name?.toLowerCase()} ${action.payload.last_name?.toLowerCase()}`;\n        draft.searchResults = [];\n        break;\n      }\n\n      case getType(actions.searchQueryModified): {\n        // this is where the search suggestions get updated...\n        if (draft.filterQuery) {\n          draft.searchResults = draft.userData.filter(\n            (result) =>\n              result.first_name\n                ?.toLowerCase()\n                .includes(draft.filterQuery.toLowerCase()) ||\n              result.last_name\n                ?.toLowerCase()\n                .includes(draft.filterQuery.toLowerCase()) ||\n              (result.first_name &&\n                result.last_name &&\n                result.first_name\n                  .toLowerCase()\n                  .concat(result.last_name.toLowerCase())\n                  .replace(/\\s/g, \"\")\n                  .includes(draft.filterQuery.replace(/\\s/g, \"\").toLowerCase()))\n          );\n        } else {\n          draft.searchResults = [];\n        }\n        break;\n      }\n\n      case getType(actions.autoSuggestCleared): {\n        draft.searchResults = [];\n        break;\n      }\n\n      case getType(actions.dataLimitModified): {\n        if (action.payload) {\n          draft.dataLimit = action.payload;\n        } else {\n          draft.dataLimit = 0;\n        }\n        break;\n      }\n    }\n  });\n\nconst sortSalary = (\n  firstValue: number | null,\n  secondValue: number | null,\n  ascending: boolean\n): number => {\n  if (firstValue === null) {\n    return 1;\n  } else if (secondValue === null) {\n    return -1;\n  } else if (firstValue === secondValue) {\n    return 0;\n  }\n  if (ascending) {\n    return firstValue < secondValue ? -1 : 1;\n  } else if (!ascending) {\n    return firstValue < secondValue ? 1 : -1;\n  }\n  return secondValue - firstValue;\n};\n","import { all, put, call, delay, takeLatest } from \"@redux-saga/core/effects\";\nimport { getType } from \"typesafe-actions\";\nimport { actions } from \"./actions\";\n\nexport function* rootSaga() {\n  yield all([\n    fetchCustomerDataSaga(),\n    takeLatest(getType(actions.filterInputUpdated), getFilteredResults),\n  ]);\n}\n\nexport function* fetchCustomerDataSaga() {\n  try {\n    const results = yield call(() =>\n      fetch(\"./MOCK_DATA.json\").then((response) => response.json())\n    );\n    if (results) {\n      yield put(actions.customerDataFetched(results));\n    } else {\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport function* getFilteredResults({ payload }: any) {\n  try {\n    yield delay(333); // we want to wait to see if the user has paused typing before updating auto suggest\n    yield put(actions.searchQueryModified(payload));\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport { TypedUseSelectorHook, useSelector } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport { rootReducer, State } from \"./reducer\";\nimport { rootSaga } from \"./saga\";\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(rootSaga);\nexport const useTypedSelector: TypedUseSelectorHook<State> = useSelector;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  position: relative;\n`;\n\nexport const Input = styled.input`\n  padding: 5px;\n  margin-right: 10px;\n`;\n\nexport const SuggestionsContainer = styled.ul`\n  position: absolute;\n  background: rgb(255, 255, 255);\n  z-index: 2;\n  display: flex;\n  flex-direction: column;\n  padding: 0;\n  top: 12px;\n  box-shadow: 0px 5px 5px -3px rgb(0 0 0 / 20%),\n    0px 8px 10px 1px rgb(0 0 0 / 14%), 0px 3px 14px 2px rgb(0 0 0 / 12%);\n`;\n\nexport const Suggestion = styled.li`\n  list-style: none;\n  padding: 5px;\n  cursor: pointer;\n  :hover {\n    background: rgba(0, 0, 0, 0.2);\n  }\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useOutsideClick } from \"../../hooks/useOutsideClick\";\nimport { useTypedSelector } from \"../../store\";\nimport { actions } from \"../../store/actions\";\nimport { Input, SuggestionsContainer, Suggestion, Wrapper } from \"./style\";\n\nexport const AutoSuggest: React.FC<{}> = () => {\n  const dispatch = useDispatch();\n  const searchFilter = useTypedSelector((state) => state.filterQuery);\n  const searchResults = useTypedSelector((state) => state.searchResults);\n  const ref = React.useRef<HTMLDivElement>(null);\n  useOutsideClick(ref, () => {\n    dispatch(actions.autoSuggestCleared());\n  });\n  return (\n    <Wrapper ref={ref}>\n      <Input\n        placeholder=\"Search either first or last name\"\n        value={searchFilter}\n        onChange={(e) => dispatch(actions.filterInputUpdated(e.target.value))}\n      ></Input>\n      <SuggestionsContainer>\n        {searchResults.slice(0, 15).map((s, index) => (\n          <Suggestion\n            key={index}\n            onClick={() => dispatch(actions.searchTermSelected(s))}\n          >{`${s.first_name} ${s.last_name}`}</Suggestion>\n        ))}\n      </SuggestionsContainer>\n    </Wrapper>\n  );\n};\n","import { useEffect } from \"react\";\n\n// Found here: https://medium.com/@kevinfelisilda/click-outside-element-event-using-react-hooks-2c540814b661, modified to TS\n\nexport const useOutsideClick = (ref: any, callback: any) => {\n  const handleClick = (e: any) => {\n    if (ref.current && !ref.current.contains(e.target)) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClick);\n\n    return () => {\n      document.removeEventListener(\"click\", handleClick);\n    };\n  });\n};\n","import styled from \"styled-components\";\n\nexport const SortContainer = styled.div`\n  display: flex;\n  align-items: center;\n  h4 {\n    margin: 0 10px 0 0;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 5px 10px;\n  border: none;\n  cursor: pointer;\n  margin: 5px;\n`;\n","import React from \"react\";\nimport { FaSortDown, FaSortUp } from \"react-icons/fa\";\nimport { useDispatch } from \"react-redux\";\nimport { actions } from \"../../store/actions\";\nimport { SortMethod } from \"../../store/types\";\nimport { Button } from \"./style\";\n\nexport const FilterButton: React.FC<{\n  label: string;\n  currentSort: SortMethod | undefined;\n  descendingSort: SortMethod;\n  ascendingSort: SortMethod;\n}> = ({ label, currentSort, descendingSort, ascendingSort }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Button\n      onClick={() =>\n        dispatch(\n          currentSort === descendingSort\n            ? actions.filterButtonPressed(ascendingSort)\n            : actions.filterButtonPressed(descendingSort)\n        )\n      }\n    >\n      {label}\n      {currentSort === descendingSort ? (\n        <FaSortDown />\n      ) : currentSort === ascendingSort ? (\n        <FaSortUp />\n      ) : null}\n    </Button>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  h4 {\n    margin: 0 10px 0 0;\n  }\n`;\n\nexport const MaxResults = styled.input`\n  padding: 5px;\n`;\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useTypedSelector } from \"../../store\";\nimport { actions } from \"../../store/actions\";\nimport { AutoSuggest } from \"../AutoSuggest\";\nimport { FilterButton } from \"../FilterButton\";\nimport { MaxResults, Wrapper } from \"./style\";\n\nexport const ControlMenu: React.FC<{\n  totalResults: number;\n  resultsShowing: number;\n}> = ({ totalResults, resultsShowing }) => {\n  const activeSort = useTypedSelector((state) => state.activeSort);\n  const dataLimit = useTypedSelector((state) => state.dataLimit);\n  const dispatch = useDispatch();\n  return (\n    <span>\n      <Wrapper>\n        <h4>Filter:</h4>\n        <AutoSuggest />\n        <h4>Sort by:</h4>\n        <FilterButton\n          label=\"Date of Birth\"\n          currentSort={activeSort}\n          ascendingSort=\"dob_ascending\"\n          descendingSort=\"dob_descending\"\n        />\n        <FilterButton\n          label=\"Industry\"\n          currentSort={activeSort}\n          ascendingSort=\"industry_ascending\"\n          descendingSort=\"industry_descending\"\n        />\n        <FilterButton\n          label=\"Salary\"\n          currentSort={activeSort}\n          ascendingSort=\"salary_ascending\"\n          descendingSort=\"salary_descending\"\n        />\n        <h4>Maximum Results:</h4>\n        <MaxResults\n          type=\"number\"\n          value={dataLimit}\n          min={0}\n          onChange={(e) =>\n            dispatch(actions.dataLimitModified(parseInt(e.target.value)))\n          }\n        />\n      </Wrapper>\n      <p>{`${totalResults} results found, showing ${resultsShowing}`}</p>\n    </span>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 20px 30px 0 30px;\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex: 1;\n`;\n","import React from \"react\";\nimport {\n  Column,\n  Table as VirtualizedTable,\n  AutoSizer,\n} from \"react-virtualized\";\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\nimport { CustomerData } from \"../../store/types\";\nimport { Wrapper } from \"./style\";\n\nexport const Table: React.FC<{ list: CustomerData[] }> = ({ list }) => {\n  const headers = Object.keys(Object.assign({}, ...list)); // dynamically populate column headers from the data itself\n  return (\n    <Wrapper>\n      <AutoSizer>\n        {({ height, width }) => (\n          <VirtualizedTable\n            width={width}\n            height={height}\n            headerHeight={30}\n            rowHeight={25}\n            rowCount={list.length}\n            rowGetter={({ index }) => list[index]}\n          >\n            {headers.map((header, index) => (\n              <Column\n                key={header}\n                width={index === 0 ? 300 : index === 5 ? 3000 : width}\n                label={header}\n                dataKey={header}\n              />\n            ))}\n          </VirtualizedTable>\n        )}\n      </AutoSizer>\n    </Wrapper>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  overflow: auto;\n  padding: 0 30px;\n  overflow: hidden;\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n`;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { Route, HashRouter } from \"react-router-dom\";\nimport { SideMenu } from \"./components/SideMenu\";\nimport { GraphsPage } from \"./pages/GraphsPage\";\nimport { TablePage } from \"./pages/TablePage\";\nimport { store } from \"./store\";\nimport { Container } from \"./style\";\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter basename={process.env.PUBLIC_URL}>\n        <Container>\n          <SideMenu />\n          <Route exact path=\"/\" component={TablePage} key={1} />\n          <Route exact path=\"/graphs\" component={GraphsPage} key={2} />\n        </Container>\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import React from \"react\";\nimport { ControlMenu } from \"../../components/ControlMenu\";\nimport { Table } from \"../../components/Table\";\nimport { useTypedSelector } from \"../../store\";\nimport { Wrapper } from \"./style\";\n\nexport const TablePage: React.FC<{}> = () => {\n  const customerData = useTypedSelector((state) => state.userData);\n  const searchFilter = useTypedSelector((state) => state.filterQuery);\n  const dataLimit = useTypedSelector((state) => state.dataLimit);\n\n  // This below code is messier than I would like it to be. Due to the time constraints of the 'estimated completion time' on the test\n  // I will leave it as it is, but in production I would most likely use selectors to control the filtering of the data.\n  const filteredList = React.useMemo(\n    () =>\n      searchFilter === \"\" // This check returns the two objects with missing firstnames/lastnames as .filter(\"\") removes them\n        ? customerData.filter((data, index) =>\n            dataLimit ? index < dataLimit : true\n          )\n        : customerData\n            .filter(\n              (data) =>\n                data?.first_name\n                  ?.toLowerCase()\n                  .includes(searchFilter.toLowerCase()) ||\n                data?.last_name?.toLowerCase().includes(searchFilter) ||\n                (data.first_name &&\n                  data.last_name &&\n                  data.first_name\n                    .toLowerCase()\n                    .concat(data.last_name.toLowerCase())\n                    .replace(/\\s/g, \"\")\n                    .includes(searchFilter.replace(/\\s/g, \"\").toLowerCase()))\n            )\n            .filter((data, index) => (dataLimit ? index < dataLimit : true)),\n    [searchFilter, customerData, dataLimit]\n  );\n\n  return (\n    <Wrapper>\n      <h1>Customer Information</h1>\n      <ControlMenu\n        totalResults={customerData.length}\n        resultsShowing={filteredList.length}\n      />\n      <Table list={filteredList} />\n    </Wrapper>\n  );\n};\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  CartesianGrid,\n  XAxis,\n  Tooltip,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { ControlMenu } from \"../../components/ControlMenu\";\nimport { useTypedSelector } from \"../../store\";\nimport { Wrapper } from \"./style\";\n\nexport const GraphsPage = () => {\n  const customerData = useTypedSelector((state) => state.userData);\n  const searchFilter = useTypedSelector((state) => state.filterQuery);\n  const dataLimit = useTypedSelector((state) => state.dataLimit);\n  // This below code is messier than I would like it to be. Due to the time constraints of the 'estimated completion time' on the test\n  // I will leave it as it is, but in production I would most likely use selectors to control the filtering of the data.\n  const filteredList = React.useMemo(\n    () =>\n      searchFilter === \"\" // This check returns the two objects with missing firstnames/lastnames as .filter(\"\") removes them\n        ? customerData.filter((data, index) =>\n            dataLimit ? index < dataLimit : true\n          )\n        : customerData\n            .filter(\n              (data) =>\n                data?.first_name\n                  ?.toLowerCase()\n                  .includes(searchFilter.toLowerCase()) ||\n                data?.last_name?.toLowerCase().includes(searchFilter) ||\n                (data.first_name &&\n                  data.last_name &&\n                  data.first_name\n                    .toLowerCase()\n                    .concat(data.last_name.toLowerCase())\n                    .replace(/\\s/g, \"\")\n                    .includes(searchFilter.replace(/\\s/g, \"\").toLowerCase()))\n            )\n            .filter((data, index) => (dataLimit ? index < dataLimit : true)),\n    [searchFilter, customerData, dataLimit]\n  );\n  return (\n    <Wrapper>\n      <ControlMenu\n        totalResults={customerData.length}\n        resultsShowing={filteredList.length}\n      />\n      <h1>Graphs</h1>\n      <ResponsiveContainer width=\"100%\" aspect={4.0 / 3.0}>\n        <LineChart width={400} height={400} data={filteredList}>\n          <XAxis dataKey=\"years_of_experience\" />\n          <Tooltip />\n          <CartesianGrid stroke=\"#f5f5f5\" />\n          <Line\n            type=\"monotone\"\n            dataKey=\"date_of_birth\"\n            stroke=\"#ff7300\"\n            yAxisId={0}\n          />\n          <Line dataKey=\"salary\" stroke=\"#387908\" yAxisId={1} />\n        </LineChart>\n      </ResponsiveContainer>\n    </Wrapper>\n  );\n};\n"],"sourceRoot":""}